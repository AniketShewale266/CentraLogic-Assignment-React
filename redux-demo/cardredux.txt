import { createStore } from "redux";
import { productList } from "./productsList";

console.dir(createStore);

const initialState = {
  products: productList,
  cartItems: [],
  wishList: [],
};


const CART_ADD_ITEM = "cart/addItem";
const CART_REMOVE_ITEM = "cart/removeItem";
const CART_ITEM_INCREASE_QUANTITY = "cart/increaseItemQuantity";
const CART_ITEM_DECREASE_QUANTITY = "cart/decreaseItemQuantity";
const WISHLIST_ADD_ITEM = "wishList/addItem";
const WISHLIST_REMOVE_ITEM = "wishList/removeItem";

function reducer(state = initialState, action) {
  switch (action.type) {
    case CART_ADD_ITEM:
      return {
        ...state,
        cartItems: [...state.cartItems, action.payload],
      };
    case CART_REMOVE_ITEM:
      return {
        ...state,
        cartItems: state.cartItems.filter(
          (cartItem) => cartItem.productId !== action.payload.productId
        ),
      };
    case CART_ITEM_INCREASE_QUANTITY:
      return {
        ...state,
        cartItems: state.cartItems.map((cartItem) => {
          if (cartItem.productId === action.payload.productId) {
            return { ...cartItem, quantity: cartItem.quantity + 1 };
          }
          return cartItem;
        }),
      };
    case CART_ITEM_DECREASE_QUANTITY:
      return {
        ...state,
        cartItems: state.cartItems.map((cartItem) => {
          if (cartItem.productId === action.payload.productId) {
            return { ...cartItem, quantity: cartItem.quantity - 1 };
          }
          return cartItem;
        })
        .filter((cartItem) => cartItem.quantity > 0)
      };
    case WISHLIST_ADD_ITEM:
      return {
        ...state,
        wishList: [...state.wishList, action.payload],
      };
    case WISHLIST_REMOVE_ITEM:
      return {
        ...state,
        wishList: state.wishList.filter(
          (wishList) => wishList.productId !== action.payload.productId
        ),
      };
    default:
      return state;
  }
}

const store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__?.());
store.dispatch({ type: CART_ADD_ITEM, payload: { productId: 1, quantity: 1 } });
store.dispatch({ type: CART_ADD_ITEM, payload: { productId: 2, quantity: 2 } });
// store.dispatch({ type: CART_ADD_ITEM, payload: { productId: 3, quantity: 3 } });
// store.dispatch({ type: CART_ADD_ITEM, payload: { productId: 4, quantity: 4 } });

// store.dispatch({ type: CART_REMOVE_ITEM, payload: { productId: 2 } });

// store.dispatch({ type: CART_ITEM_INCREASE_QUANTITY, payload: { productId: 4 } });

// store.dispatch({
//   type: CART_ITEM_DECREASE_QUANTITY,
//   payload: { productId: 4 },
// });

// add in wishlist
store.dispatch({ type: WISHLIST_ADD_ITEM, payload: { productId: 1 } });
store.dispatch({ type: WISHLIST_ADD_ITEM, payload: { productId: 2 } });
// remove from wishlist
store.dispatch({ type: WISHLIST_REMOVE_ITEM, payload: { productId: 1 } });

console.log(store);
